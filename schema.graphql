# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

type HeroSummary {
  assists: Float!
  deaths: Float!
  games: Float!
  hero: String!
  kills: Float!
  losses: Float!
  wins: Float!
}

type Match {
  duration: Float!
  id: Float!
  players: [PlayerInMatch!]!
  radiant_win: Boolean!
  timestamp: String!
  type: Float!
}

type OverallStats {
  games: Float!
  loss: Float!
  wins: Float!
}

type PaginatedMatch {
  data: [Match!]
  page: Float!
  pages: Float!
}

type Player {
  games: [PlayerInMatch!]!
  mmr: Float!
  name: String!
  steam_id: String!
}

type PlayerInMatch {
  assists: Float!
  deaths: Float!
  denies: Float!
  gpm: Float!
  hero: String!
  id: Float!
  items: String!
  kills: Float!
  last_hits: Float!
  level: Float!
  player: Player!
  team: Float!
  xpm: Float!
}

type PlayerStatsDto {
  denies: Float!
  games: Float!
  gpm: Float!
  hero: String!
  kda: Float!
  last_hits: Float!
  loss: Float!
  playerSteamId: String!
  wins: Float!
  xpm: Float!
}

type PlayerStatsModel {
  heroes: [PlayerStatsDto!]!
  overall: OverallStats!
}

type Query {
  HeroMatches(hero: String!, page: Int!): PaginatedMatch!
  Heroes: [HeroSummary!]!
  History(mode: Int, page: Int!): PaginatedMatch!
  Ladder: [Player!]!
  Match(id: Int!): Match!
  Player(steam_id: String!): Player!
  PlayerHistory(hero: String, page: Int!, steam_id: String!): PaginatedMatch!
  PlayerStats(steam_id: String!): PlayerStatsModel!
}
